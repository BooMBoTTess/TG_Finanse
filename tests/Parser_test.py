import Finance_module
import pytest

def test_get_check_by_QR():
    assert Finance_module.get_data('QR_buffer/test_check.jfif',
                                   2) == (-1, 'API не удалось прочитать чек')
def test_get_incorrect_check_by_QR():
    assert Finance_module.get_data('QR_buffer/test_chdeck.jfif',
                                   2) == (-2, 'Некорректная ссылка на QR код')

def test_get_check_by_raw():
    assert Finance_module.get_data('t=20200924T1837&s=349.93&fn=9282440300682838&i=46534&fp=1273019065&n=1', 1) == ('Акционерное общество "Тандер"',
 34993,
 '2020-09-24T18:37:00',
 ["Название: МОЯ ЦЕНА Уксус столовый 9% 1л пл/б, цена: 2599, количество: 1, стоимость: 2599",
  "Название: HEINZ Кетчуп острый дой-пак 350 г(, цена: 5499, количество: 1, стоимость: 5499",
  "Название: HEINZ Кетчуп для гриля и шашлыка д, цена: 5999, количество: 1, стоимость: 5999",
  "Название: ДОМИК В ДЕРЕВНЕ Сметана 15% 300г п, цена: 5499, количество: 2, стоимость: 10998",
  "Название: Хлеб Бабушкин нарез 230г п/уп(Смак, цена: 2899, количество: 1, стоимость: 2899",
  "Название: EAT MEAT/СЕМ СЕКР Свинина нежная к, цена: 6999, количество: 1, стоимость: 6999"])
def test_get_incorrect_check_by_raw():
    assert Finance_module.get_data('t=20200924T1837&s=349.93&fn=928244030068283dsa8&i=46534&fp=1273019065&n=1', 1) == (-1, 'API не удалось прочитать чек')

